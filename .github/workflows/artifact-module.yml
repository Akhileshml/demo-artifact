name: Build and Publish Python Package

on:
  push:
    branches:
      - development  # Trigger workflow only on this branch

permissions:
  contents: write

jobs:
  build_and_publish_package:
    name: Build and Publish Python Package to AWS CodeArtifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Check for Changes
        id: changes
        run: |
          git fetch origin development
          if git diff --exit-code HEAD origin/development -- . > /dev/null; then
            echo "Changes detected. Proceeding with version bump and deployment."
            echo "should_deploy=true" >> $GITHUB_ENV
          else
            echo "No changes detected. Skipping version bump and deployment."
            echo "should_deploy=false" >> $GITHUB_ENV
          fi

      - name: Increment Version (if needed)
        if: env.should_deploy == 'true'
        run: |
          python bump_version.py
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git commit -am "Bump version to $(cat version.txt)"
          git push

      - name: Install Build Tools
        if: env.should_deploy == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build Python Package
        if: env.should_deploy == 'true'
        run: |
          python setup.py sdist bdist_wheel

      - name: Configure AWS Credentials
        if: env.should_deploy == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS CodeArtifact
        if: env.should_deploy == 'true'
        run: |
          aws codeartifact login \
            --tool twine \
            --repository pypi-store \
            --domain ak \
            --domain-owner 897729129103

      - name: Publish Package
        if: env.should_deploy == 'true'
        run: |
          twine upload --repository codeartifact --verbose dist/*

      - name: Upload Package Artifact to GitHub
        if: env.should_deploy == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: calculator-package
          path: dist/*
